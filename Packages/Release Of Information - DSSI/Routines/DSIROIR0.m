DSIROIR0 ;EWL - Document Storage System;Year End FOIA Report ;09/22/2009 13:15
 ;;8.0;RELEASE OF INFORMATION - DSSI;;Dec 25, 2010;Build 11
 ;Copyright 1995-2011, Document Storage Systems, Inc., All Rights Reserved
 ;
 ;DBIA# Supported Reference
 ;----- -------------------
 ;2056  GETS^DIQ
 ;2052  $$GET1^DID
 ;Integration Agreements 10046
 Q
 ;
FOIA(AXY,STDT,ENDT,DIV,QUICK) ;RPC - DSIR YEAR END FOIA REPORT
 ; INPUT
 ; STDT - REPORT STARTING DATE
 ; ENDT - REPORT ENDING DATE
 ; DIV - DIVISION - REQUIRED FOR MULTIDIVISIONAL USER
 ; QUICK - OPTIONAL
 ;     0 - Calculate the report and save the results if report for a fiscal year
 ;     1 - Return the stored results of the report for a fiscal year
 ;     2 - Return the combined stored results and OFFSETS for a fiscal year
 ;
 ; RETURNS: GLOBAL ARRAY
 ; The return array will have entries with 3 pieces.  The first piece will
 ; be the field name, the second piece will contain the value to go in the 
 ; specified block, the third piece is a short description;
 ;
 ; Example: EXEMP1^12^EXEMPTION 1
 ;*******************************
 ;STATUS CODES FROM 19620.41
 ;1 = O^OPEN
 ;2 = P^PENDING
 ;3 = C-G^CLOSED GRANTED
 ;4 = C-P^CLOSED PARTIAL
 ;5 = C-D^CLOSED DENIED
 ;6 = N-NR^OTHER NONDISCLOSURE - NO RECORD
 ;7 = N-RF^OTHER NONDISCLOSURE - REFERRAL
 ;8 = N-ND^OTHER NONDISCLOSURE - NOT DESCRIBED
 ;9 = N-NV^OTHER NONDISCLOSURE - NOT VA RECORD
 ;10 = N-RC^OTHER NONDISCLOSURE - OTHER
 ;11 = N-NF^OTHER NONDISCLOSURE - FEE RELATED
 ;12 = N-NU^OTHER NONDISCLOSURE - DUPLICATE REQUEST
 ;13 = N-NP^OTHER NONDISCLOSURE - NOT PROPER FOIA
 ;14 = A-RV^APPEALED REVERSED
 ;15 = A-PR^APPEALED PARTIAL REVERSED
 ;16 = X^CANCELLED
 ;17 = E^ERROR
 ;18 = P-P^PENDING PAYMENT
 ;19 = P-C^PENDING CLARIFICATION
 ;20 = N-MS^OTHER NONDISCLOSURE - MEDICALLY SENSITIVE
 ;21 = N-PD^OTHER NONDISCLOSURE - PATIENT DIED BEFORE COMPLETION
 ;22 = N-PA^OTHER NONDISCLOSURE - PUBLICLY AVAILABLE
 ;23 = N-G^OTHER NONDISCLOSURE - GLOMAR
 ;24 = N-SL^OTHER NONDISCLOSURE - SUBSUMED BY LITIGATION
 ;25 = P-H^PENDING PAYMENT - ON HOLD
 ;26 = C-PR^PENDING PAYMENT - RELEASED
 N DLIST,NLIST
 ; THESE LINES ADDED TO CORRECTLY ESTALBLISH THE DIVISION(S)
 I $G(DIV)  S DIV=$P(DIV,U)
 I '$G(DIV) S DIV=DUZ(2)
 ;
 N AXYN,LODT,XRF,WRKD,STH,STH0,ROI,LXR,QGL,STAD,STDP,GBL,CTR,CNT,ROISTAT,PAREQ
 N ROI0,ROI10,ROI12,ROI13,ROI4,ROI6,ST2,FOPDT,FCLST,FCLDP,FCLDT
 S CNT=0,AXY=$NA(^TMP("DSIRYRFOIA",$J)),STDT=+$G(STDT)\1,ENDT=+$G(ENDT)\1,AXYN="DSIRYRFOIA",CTR=0
 ;
 S QUICK=+$G(QUICK) S:'$D(^DSIR(19620.3,"AFYDIV",ENDT,DIV)) QUICK=0
 D:$D(^DSIR(19620.3,"AFYDIV",ENDT,DIV)) 
 .S TST=0 F  S TST=$O(^DSIR(19620.3,"AFYDIV",ENDT,DIV,TST)) Q:'TST  S IEN=TST
 K @AXY,^TMP("DSIR",$J),^TMP("DSIR91",$J),^TMP("DSIR20",$J)
 ;
 ;Initalize counters
 ;EXEMPTIONS
 N EXEMP1,EXEMP2,EXEMP3,EXEMP4,EXEMP5,EXEMP6,EXEMP7A,EXEMP7B,EXEMP7C,EXEMP7D,EXEMP7E,EXEMP7F,EXEMP8,EXEMP9
 S (EXEMP1,EXEMP2,EXEMP3,EXEMP4,EXEMP5,EXEMP6,EXEMP7A,EXEMP7B,EXEMP7C,EXEMP7D,EXEMP7E,EXEMP7F,EXEMP8,EXEMP9)=0
 ;EXEMPTION 3 STATUTES
 N EX35705,EX37332,EX35701,EX3253B,EX3APP3,EX3205 S (EX35705,EX37332,EX35701,EX3253B,EX3APP3,EX3205)=0
 ;MISCELLANEOUS COUNTERS
 N NBRPNDST,NBRRECVD,NBRPROCD,NBRPNDED,NBRGRNTS,NBRPARTS,NBRDENY,WRKDYTOT,GRANTDYS
 S (NBRPNDST,NBRRECVD,NBRPROCD,NBRPNDED,NBRGRNTS,NBRPARTS,NBRDENY,WRKDYTOT,GRANTDYS)=0
 ;OTHER REASONS FOR NON-DISCLOSURE
 N ORNDA,ORNDB,ORNDC,ORNDD,ORNDE,ORNDF,ORNDG,ORNDH,ORNDI,ORNDJ,ORNDK,ORNDL,ORNDM,ORNDN
 S (ORNDA,ORNDB,ORNDC,ORNDD,ORNDE,ORNDF,ORNDG,ORNDH,ORNDI,ORNDJ,ORNDK,ORNDL,ORNDM,ORNDN)=0
 ;EXPEDITED PROCESSING
 N EXRQSDCT,EXPRGRNT,EXPRDENY,EXPADJMD,EXPADJAV,EXPADJ10,EXPDAYCT,EXPADJCT
 S (EXRQSDCT,EXPRGRNT,EXPRDENY,EXPADJMD,EXPADJAV,EXPADJ10,EXPDAYCT,EXPADJCT)=0
 S EXADJGBL=$NA(^TMP("DSIREXPADJ",$J))
 ;FEE WAIVER
 N FWRQSDCT,FWGRANT,FWDENY,FWADJMED,FWADJAVG,FWDAYCT,FWADJCT S (FWRQSDCT,FWGRANT,FWDENY,FWADJMED,FWADJAVG,FWDAYCT,FWADJCT)=0
 S FWADJGBL=$NA(^TMP("DSIRFWADJ",$J))
 ;BACKLOGGED
 N BACKLGCT S BACKLGCT=0
 ;
 ; PERFECTED REQUEST STATISTICAL ACCUMULATORS
 ;
 ;ALL & GRANTED PERFECTED 
 N ALLCPXCT,ALLCPXMD,ALLCPXAV,ALLCPXHI,ALLCPXLO,GRTCPXCT,GRTCPXMD,GRTCPXAV,GRTCPXHI,GRTCPXLO
 S (ALLCPXCT,ALLCPXMD,ALLCPXAV,ALLCPXHI,ALLCPXLO,GRTCPXCT,GRTCPXMD,GRTCPXAV,GRTCPXHI,GRTCPXLO)=0
 S GRANTGBL=$NA(^TMP("DSIRGRANT",$J)),CLOSEGBL=$NA(^TMP("DSIRCLOSED",$J))
 ;PENDING PERFECTED
 N PNDPRFCT,PNDPRFMD,PNDPRFAV,PNDPRFDY S (PNDPRFCT,PNDPRFDY,PNDPRFMD,PNDPRFAV)=0
 S PENDGBL=$NA(^TMP("DSIRPEND",$J))
 ;RESPOSE TIME RANGES
 N RSPTM020,RSPTM040,RSPTM060,RSPTM080,RSPTM100,RSPTM120,RSPTM140,RSPTM160,RSPTM180,RSPTM200,RSPTM300,RSPTM400,RSPTMUNL
 S (RSPTM020,RSPTM040,RSPTM060,RSPTM080,RSPTM100,RSPTM120,RSPTM140,RSPTM160,RSPTM180,RSPTM200,RSPTM300,RSPTM400,RSPTMUNL)=0
 ;
 ;Execute for QUICK=1
 I QUICK=1 D  G TOTALS^DSIROIR3 ; Return the stored results of the report for a fiscal year
 .N GET,IENS,VAR,II S IENS=IEN_","
 .D GETS^DIQ(19620.3,IENS,"**","IE","GET")
 .F II=145.01:1:224.01 D
 ..S VAR=$P($$GET1^DID(19620.3,II,,"GLOBAL SUBSCRIPT LOCATION"),";")
 ..S:VAR]"" @VAR=+$G(GET(19620.3,IENS,II,"I"))
 .Q
 ;
 ;Execute for QUICK=2
 I QUICK=2 D  Q  ; Return the combined stored results and user add ins for a fiscal year
 .N GET,IENS,II,SECT,LNBX S IENS=IEN_","
 .D GETS^DIQ(19620.3,IENS,"**","IE","GET")
 .F II=145.01:1:224.01 D
 ..S LNBX=$P($$GET1^DID(19620.3,II,,"GLOBAL SUBSCRIPT LOCATION"),";")
 ..S ^TMP(AXYN,$J,$$UC^DSIROIR3)=LNBX_U_($G(GET(19620.3,IENS,II,"I"))+$G(GET(19620.3,IENS,II+.01,"I")))
 ;
 ;
 ; EXECUTE FOR  QUICK = 0, "", OR NULL
 I 'STDT!'ENDT S ^TMP(AXYN,$J,0)="-1^Must Pass Start and End Dates!" Q
 ;
 ;Global Subscripts ( 1 - FILE, 2 - XREF, 3 - DATE, 4 - STATUS, 5 - STATUS HISTORY)
 ;
 ; TEST FOR OPEN DATES WITHIN RANGE
 S XRF="AOP",LODT=STDT-.1,QGL=$NA(^DSIR(19620,XRF,LODT))
 F  S QGL=$Q(@QGL) Q:('($QS(QGL,2)=XRF))!($QS(QGL,3)>(ENDT+.3))  D
 .S ROI=$QS(QGL,4) D CHK
 ;
 ; CHECK FOR CLOSED DATE IN RANGE
 S XRF="ACL",LODT=STDT-.1,QGL=$NA(^DSIR(19620,XRF,LODT))
 F  S QGL=$Q(@QGL) Q:'($QS(QGL,2)=XRF)  D
 .S ROI=$QS(QGL,4) D:'$D(^TMP("DSIR20",$J,ROI,"V")) CHK
 ; 
 ; CHECK IF THE REQUEST IS STILL OPEN OR PENDING
 S XRF="AFOIA",QGL=$NA(^DSIR(19620,XRF))
 F  S QGL=$Q(@QGL) Q:'($QS(QGL,2)=XRF)  D
 .S ROI=$QS(QGL,3) D:'$D(^TMP("DSIR20",$J,ROI,"V")) CHK
 ;
 ;GET TOTALS AND DELETE TEMP GLOBALS
 D TOTALS^DSIROIR3
 K ^TMP("DSIR20",$J),^TMP("DSIREXPADJ",$J),^TMP("DSIRFWADJ",$J)
 K ^TMP("DSIRPEND",$J),^TMP("DSIRGRANT",$J),^TMP("DSIRCLOSED",$J)
 K ^TMP("DSIR",$J),^TMP("DSIR91",$J),^TMP("DSIR20",$J)
 Q
 ;
CHK ;
 N ROISTAT,AUTH,DIVT,TYPORQ,RQREAS,RQSTRTYP,QQ
 ; DIVISION CHECK
 S DIVT=$P($G(^DSIR(19620,ROI,6)),U,3) Q:DIVT'=DIV
 ; NODE 10 CONTAINS REQUEST INFO (TYPE, REASON, AUTHORITY, 
 ; REQUESTOR TYPE, STATUS, RECEIVED DATE, CLOSED DATE AND DISPOSITION)
 S ROI10=$G(^DSIR(19620,ROI,10))
 ; ZERO NODE CONTAINS PATIENT, CLERK AND EXPEDITED DATA 
 S ROI0=$G(^DSIR(19620,ROI,0))
 ; PAREQ=0 IF FOIA OTHERWISE IT IS A 1
 S PAREQ=$P(ROI0,U)'="1;DSIR(19620.95,"
 ; GET THE CURRENT STATUS
 S ROISTAT=$P(ROI10,U,8)
 ;Request counted in previous time period
 S FOPDT=+$P(ROI10,U,6),FCLDT=+$P(ROI10,U,7)
 S:FCLDT FCLST=ROISTAT
 I FCLDT>0,FCLDT<STDT Q
 ;Request opened after report time period
 I FOPDT>ENDT Q
 ;Don't count if request was ever marked with an error status
 S QQ=$Q(^DSIR(19620.91,"AREQFSC",ROI,17))
 I $QS(QQ,4)=17,$QS(QQ,3)=ROI Q
 ;QUIT IF GRANTED, OPEN, OR ANY PENDING STATUS AND 1ST OR 3RD PARTY
 I (("^3^1^2^18^19^25^26^")[(U_ROISTAT_U))&PAREQ Q
 ;QUIT IF DUPLICATE or REFERRAL (ANY REQUEST TYPE) or any APPEALED
 I ("^12^7^14^15^")[(U_ROISTAT_U) Q
 ; GET THE REQUEST TYPE
 S TYPORQ=+ROI10
 ; GET THE REASON FOR REQUEST
 S RQREAS=+$P(ROI10,U,2)
 ; GET THE AUTHORITY
 S AUTH=+$P(ROI10,U,3)
 ; GET THE REQUESTOR TYPE
 S RQSTRTYP=+$P(ROI10,U,4)
 ;QUIT IF MEDICAL FORMS
 Q:(RQREAS=11)!(TYPORQ=5)
 ;QUIT IF STATE REPORTING
 Q:(RQREAS=8)!(TYPORQ=4)
 ;QUIT IF SOCIAL SECURITY
 Q:RQSTRTYP=8
 ;QUIT IF OTHER FEDERAL AGENCY
 Q:RQSTRTYP=11
 ;
 ; ONCE THE UNWANTED RECORDS HAVE BEEN DISCARDED, GET THE REST OF THE REPORT DATA FOR THIS IEN
 ;
 ; NODE 4 CONTAINS FEE WAIVER INFORMATION
 S ROI4=$G(^DSIR(19620,ROI,4))
 ; NODE 12 EXEMPTION DATA
 S ROI12=$G(^DSIR(19620,ROI,12))
 ; NODE 13 EXEMPTION 3 STATUTES
 S ROI13=$G(^DSIR(19620,ROI,13))
 ;***************************************
 ; This request is a Keeper!
 S ^TMP("DSIR20",$J,ROI,"V")="",CTR=CTR+1
 ;***************************************
 ;WAS THIS REQUEST PENDING AT START OF REPORTING PERIOD?
 I '$D(^TMP("DSIR20",$J,ROI,"NBRPNDST")) D
 .I FOPDT<STDT S NBRPNDST=NBRPNDST+1,^TMP("DSIR20",$J,ROI,"NBRPNDST")=""
 .;Pending at start
 ;
 ;WAS THIS REQUEST OPENED DURING THE REPORTING PERIOD?
 I '$D(^TMP("DSIR20",$J,ROI,"NBRRECVD")) D
 .I FOPDT'<STDT S NBRRECVD=NBRRECVD+1,^TMP("DSIR20",$J,ROI,"NBRRECVD")="" ;Opened during
 ;
 ;WAS THIS REQUEST CLOSED DURING THE REPORTING PERIOD?
 I FCLDT,FCLDT'>ENDT,'$D(^TMP("DSIR20",$J,ROI,"NBRPROCD")) D
 .; Closed during
 .S NBRPROCD=NBRPROCD+1,^TMP("DSIR20",$J,ROI,"NBRPROCD")=""
 .D RQSTCTS,STATPROC I 'PAREQ D FWPROC,EXPPROC
 S:FOPDT<STDT FOPDT=STDT
 ;
 ;WAS THIS REQUEST PENDING AT END OF REPORTING PERIOD?
 I 'FCLDT!(FCLDT>ENDT),'$D(^TMP("DSIR20",$J,ROI,"NBRPNDED"))  D
 .S FCLDT=ENDT,NBRPNDED=NBRPNDED+1,^TMP("DSIR20",$J,ROI,"NBRPNDED")=""
 .D STATPEND ;,EXPPROC,FWPROC ;Pending at end
 ;
 S STH=0 F  S STH=$O(^DSIR(19620.91,"B",ROI,STH)) Q:'STH  D
 .S STH0=$G(^DSIR(19620.91,STH,0)),STAD=$P(STH0,U,3),ST=$P(STH0,U,2)
 .I STAD'<STDT,STAD'>ENDT S ^TMP("DSIR20",$J,ROI)=FOPDT_U_$P(ROI,U,7),^TMP("DSIR20",$J,ROI,STH)=""
 ;
 S ^TMP("DSIR20",$J,ROI,"V")=""
 Q
 ;
RQSTCTS ; REQUESTS (ALL)
 I (FCLST=3)!(FCLST=26) S NBRGRNTS=NBRGRNTS+1 Q
 ; NO NEED TO PROCESS EXEMPTIONS IF GRANTED
 ; 16=CANCELLED BUT REPORTED AS ORND WITHDRAWN
 I FCLST=16 S ORNDC=ORNDC+1 Q
 ; THESE ARE ALL OTHER NON DISCLOSURES
 ; 6=NO RECORD
 I FCLST=6 S ORNDA=ORNDA+1 Q 
 ; 7=REFERRAL - NOT COUNTED
 I FCLST=7 Q
 ; 8=NOT DESCRIBED
 I FCLST=8 S ORNDE=ORNDE+1 Q
 ; 9=NOT A VA RECORD
 I FCLST=9 S ORNDG=ORNDG+1 Q
 ; 10=OTHER - OBSOLETE
 I FCLST=10 S ORNDI=ORNDI+1 Q
 ; 11=FEE RELATED
 I FCLST=11 S ORNDD=ORNDD+1 Q
 ; 12=DUPLICAT - NOT COUNTED
 I FCLST=12 Q
 ; 13=NOT A PROPER FOIA
 I FCLST=13 S ORNDF=ORNDF+1 Q
 ; 20=MEDICALLY SENSITIVE
 I FCLST=20 S ORNDJ=ORNDJ+1 Q
 ; 21=PATIENT DIED
 I FCLST=21 S ORNDK=ORNDK+1 Q
 ; 22=PUBLICLY AVAILABLE
 I FCLST=22 S ORNDL=ORNDL+1 Q
 ; 23=GLOMAR
 I FCLST=23 S ORNDM=ORNDM+1 Q
 ; 24=SUBSUMED BY LITIGATION
 I FCLST=24 S ORNDN=ORNDN+1 Q
 ; CLOSED PARTIAL/DENIED WITH EXEMPTIONS
 I FCLST=4 S NBRPARTS=NBRPARTS+1
 ; PARTIAL REQUESTS
 I FCLST=5 S NBRDENY=NBRDENY+1
 ; DENIED REQUESTS
 ;
 ;EXEMPTION PROCESSING
 I (FCLST=4)!(FCLST=5) D 
 .S:$P(ROI12,U,1) EXEMP1=EXEMP1+1
 .S:$P(ROI12,U,2) EXEMP2=EXEMP2+1
 .I +$P(ROI12,U,3) D
 ..;IF EXEMPTION 3 THEN INCREMENT AND PROCESS STATUTES
 ..S EXEMP3=EXEMP3+1
 ..S:$P(ROI13,U) EX35701=EX35701+1
 ..S:$P(ROI13,U,2) EX35705=EX35705+1
 ..S:$P(ROI13,U,3) EX3205=EX3205+1
 ..S:$P(ROI13,U,4) EX37332=EX37332+1
 ..S:$P(ROI13,U,11) EX3253B=EX3253B+1
 ..S:$P(ROI13,U,12) EX3APP3=EX3APP3+1
 .S:$P(ROI12,U,4) EXEMP4=EXEMP4+1
 .S:$P(ROI12,U,5) EXEMP5=EXEMP5+1
 .S:$P(ROI12,U,6) EXEMP6=EXEMP6+1
 .S:$P(ROI12,U,7) EXEMP7A=EXEMP7A+1
 .S:$P(ROI12,U,8) EXEMP7B=EXEMP7B+1
 .S:$P(ROI12,U,9) EXEMP7C=EXEMP7C+1
 .S:$P(ROI12,U,10) EXEMP7D=EXEMP7D+1
 .S:$P(ROI12,U,11) EXEMP7E=EXEMP7E+1
 .S:$P(ROI12,U,12) EXEMP7F=EXEMP7F+1
 .S:$P(ROI12,U,13) EXEMP8=EXEMP8+1
 .S:$P(ROI12,U,14) EXEMP9=EXEMP9+1
 Q
 ;
EXPPROC ; EXPEDITED PROCESSING
 Q:PAREQ
 N EXPR,EXPDT,ADJDT,EXADJ,EXGR,EXADJDYS,X1,X2 S (EXADJ,GRNT,EXADJDYS)=0
 ; ALREADY PROCESSED THIS ONE
 Q:$D(^TMP("DSIREXPADJ",$J,"TRACK",ROI))
 ; DO NOT COUNT IF CLOSED WITHIN 10 DAYS OF OPEN
 S X2=FOPDT,X1=+FCLDT D ^%DTC Q:X<10
 S EXPR=+$P(ROI0,U,4) Q:'EXPR  S EXPDT=+$P(ROI0,U,6) Q:'EXPDT
 ;S ADJDT=+$P(ROI0,U,8) Q:(EXPDT<(STDT-.1))&(ADJDT<(STDT-.1))
 S ADJDT=+$P(ROI0,U,8)
 ;******** PROCESS *********
 S ^TMP("DSIREXPADJ",$J,"TRACK",ROI)=""
 S EXRQSDCT=EXRQSDCT+1,EXADJ=+$P(ROI0,U,7) I EXADJ D
 .; GRANT OR DENY 
 .S EXPADJCT=EXPADJCT+1,EXGR=+$P(ROI0,U,5),EXPRGRNT=EXPRGRNT+EXGR,EXPRDENY=EXPRDENY+'EXGR
 .; CALENDAR DAYS TO ADJUDICATE
 .S X2=EXPDT,X1=ADJDT D ^%DTC S EXADJDYS=$S(X:X,1:1),EXPDAYCT=EXPDAYCT+EXADJDYS
 .; ADJUDICATION < 10 DAYS
 .S:EXADJDYS<10.1 EXPADJ10=EXPADJ10+1
 .S CTR=CTR+1,^TMP("DSIREXPADJ",$J,"ADJ",EXADJDYS,CTR)=""
 Q
 ;
FWPROC ; FEE WAIVER PROCESSING
 Q:PAREQ
 N FWR,FWRDT,ADJDT,FWADJ,FWGR,FWADJDYS S (FWADJ,FWGR,FWADJDYS)=0
 ; ALREADY PROCESSED THIS ONE
 Q:$D(^TMP("DSIRFWADJ",$J,"TRACK",ROI))
 S FWR=+$P(ROI4,U,1) Q:'FWR  S FWRDT=+$P(ROI4,U,2) Q:'FWRDT
 ;S ADJDT=$P(ROI4,U,4) Q:(FWRDT<(STDT-.1))&(ADJDT<(STDT-.1))
 S ADJDT=$P(ROI4,U,4)
 ;******** PROCESS *********
 S ^TMP("DSIRFWADJ",$J,"TRACK",ROI)=""
 S FWRQSDCT=FWRQSDCT+1,FWADJ=+$P(ROI4,U,3) I FWADJ  D
 .; GRANT OR DENY 
 .S FWADJCT=FWADJCT+1,FWGR=+$P(ROI4,U,5),FWGRANT=FWGRANT+FWGR,FWDENY=FWDENY+'FWGR
 .; WORK DAYS TO ADJUDICATE
 .S FWADJDYS=$$EN^XUWORKDY(FWRDT,ADJDT),FWADJDYS=$S(FWADJDYS:FWADJDYS,1:1),FWDAYCT=FWDAYCT+FWADJDYS
 .S CTR=CTR+1,^TMP("DSIRFWADJ",$J,"ADJ",FWADJDYS,CTR)=""
 Q
 ;
STATPROC ; STATISTICS FOR PERFECTED CLOSED REQUESTS
 I $$PERFCHK(0) D
 .N RECDT,WORKDAYS,STAT S RECDT=+$P(ROI10,U,6)
 .;
 .;** Code for section VII.A
 .;
 .S ALLCPXCT=ALLCPXCT+1
 .S WORKDAYS=$$WKDY2CLS(ROI,ENDT)
 .S:WORKDAYS<1 WORKDAYS=1
 .S CTR=CTR+1,WRKDYTOT=WRKDYTOT+WORKDAYS,^TMP("DSIRCLOSED",$J,"DAYS",WORKDAYS,CTR)=""
 .I WORKDAYS>ALLCPXHI D
 ..S ALLCPXHI=WORKDAYS
 .S:ALLCPXLO=0 ALLCPXLO=WORKDAYS
 .S:WORKDAYS<ALLCPXLO ALLCPXLO=WORKDAYS
 .;
 .;** Code for section VII.B
 .;
 .;IS THIS GRANTED, PARTIAL, OR PENDING PAYMENT RELEASED?
 .S STAT=(+$P(ROI10,U,8))
 .I (STAT=4)!(((STAT=3)!(STAT=26))&('PAREQ)) D
 ..S GRTCPXCT=GRTCPXCT+1
 ..S CTR=CTR+1,GRANTDYS=GRANTDYS+WORKDAYS,^TMP("DSIRGRANT",$J,"DAYS",WORKDAYS,CTR)=""
 ..S:WORKDAYS>GRTCPXHI GRTCPXHI=WORKDAYS
 ..S:GRTCPXLO=0 GRTCPXLO=WORKDAYS
 ..S:WORKDAYS<GRTCPXLO GRTCPXLO=WORKDAYS
 .;
 .;** Code for section VII.C
 .;
 .I WORKDAYS<21 S RSPTM020=RSPTM020+1 Q
 .I WORKDAYS<41 S RSPTM040=RSPTM040+1 Q
 .I WORKDAYS<61 S RSPTM060=RSPTM060+1 Q
 .I WORKDAYS<81 S RSPTM080=RSPTM080+1 Q
 .I WORKDAYS<101 S RSPTM100=RSPTM100+1 Q
 .I WORKDAYS<121 S RSPTM120=RSPTM120+1 Q
 .I WORKDAYS<141 S RSPTM140=RSPTM140+1 Q
 .I WORKDAYS<161 S RSPTM160=RSPTM160+1 Q
 .I WORKDAYS<181 S RSPTM180=RSPTM180+1 Q
 .I WORKDAYS<201 S RSPTM200=RSPTM200+1 Q
 .I WORKDAYS<301 S RSPTM300=RSPTM300+1 Q
 .I WORKDAYS<401 S RSPTM400=RSPTM400+1 Q
 .I WORKDAYS>400 S RSPTMUNL=RSPTMUNL+1
 Q
 ;
STATPEND ; STATISTICS FOR PENDING REQUESTS - SECTION VII.D & BACKLOGGED
 N OPDT,WRKD S OPDT=+$P(ROI10,U,6)
 S WRKD=$$EN^XUWORKDY(OPDT,ENDT)-$$PNDCLR(ROI,ENDT)-$$PAYPND(ROI,ENDT)
 S:'WRKD WRKD=1
 S:WRKD>20 BACKLGCT=BACKLGCT+1
 I $$PERFCHK(1) D
 .S PNDPRFCT=PNDPRFCT+1,PNDPRFDY=PNDPRFDY+WRKD,^TMP("DSIRPEND",$J,"DAYS",WRKD,PNDPRFCT,ROI)=""
 Q
 ;
PERFCHK(PENDING) ; EXTRINSIC FUNCTION TO DETERMINE IF REQUEST IS PERFECTED.
 N STATUS S STATUS=U_$P(ROI10,U,8)_U
 ; FALSE FOR 7=REFERRAL, 9=NOT A VA RECORD, 11=FEE RELATED, 12=DUPLICATE, 13=NOT A PROPER FOIA
 I "^7^9^11^12^13^"[STATUS Q 0
 ; TRUE FOR ALL OTHER FOIA's
 I 'PAREQ Q 1
 I $P(ROI10,U)=11 Q 0  ; MEDICAL FORMS
 I PENDING Q 0
 ; NOT A FOIA SO IS THE STATUS OK?
 ;  4=PARTIAL GRANT, 5=DENIED, 16=CANCELLED
 ;  OTHER REASON FOR NON-DISCLOSURE CODES:  
 ;  6=NO RECORD, 8=NOT DESCRIBED, 10=OTHER, 
 ;  20=MEDICALLY SENSITIVE, 21=PATIENT DIED BEFORE COMPLETION,
 ;  22=PUBLICLY AVAILABLE, 23=GLOMAR, 24=SUBSUMED BY LITIGATION
 I "^4^5^16^6^8^10^20^21^22^23^24^"[STATUS Q 1
 Q 0
WKDY2CLS(IEN,ENDDT) ; EXTRINSIC FUNCTION - WORKDAYS TO CLOSE
 N RET,RECDT,FCLDT
 S (RET,RECDT,FCLDT)=""
 S RECDT=$P(^DSIR(19620,IEN,10),U,6)
 S FCLDT=$P(^DSIR(19620,IEN,10),U,7)
 S RET=$$EN^XUWORKDY(RECDT,FCLDT)-$$PNDCLR(IEN,ENDDT)-$$PAYPND(IEN,ENDDT)
 I RET<1 S RET=1
 Q RET
 ;
PAYPND(ROI,ENDDT) ;Function to subtract any days pending payment from Turnaround time
 N DONE,QRY,IEN,RETDT,STIEN,FI,QQ,PDAYS,STDT,INDX
 I '$D(^DSIR(19620,ROI,10)) Q 0
 S (STDYS,DONE,PDAYS)=0,IEN=ROI,FI=19620.91,(STDT,RETDT)=ENDDT
 I +$P(^DSIR(19620,ROI,10),U,12) D
 .;TRAVERSE THE STATUS HISTORY FILE
 .S QRY=$NA(^DSIR(FI,"ASTDTDTE",ROI))
 .F  Q:DONE  D
 ..S QRY=$Q(@QRY)
 ..S IEN=$QS(QRY,3),INDX=$QS(QRY,2),STIEN=$QS(QRY,6)
 ..I (ROI'=IEN)!(INDX'="ASTDTDTE") S DONE=1 Q
 ..S:$D(^DSIR(FI,STIEN,0)) STC=$P(^DSIR(FI,STIEN,0),U,8)
 ..;I "^25^26^"[(U_STC_U) D
 ..I "^25^"[(U_STC_U) D
 ...S STDT=$QS(QRY,4),QQ=$Q(@QRY)
 ...I $QS(QQ,3)=ROI,$QS(QQ,2)="ASTDTDTE" S RETDT=$QS(QQ,4),PDAYS=PDAYS+$$EN^XUWORKDY(STDT,RETDT)
 ...I $QS(QQ,3)'=ROI S DONE=1,PDAYS=PDAYS+$$EN^XUWORKDY(STDT,ENDDT)
 ...I $QS(QQ,2)'="ASTDTDTE" S DONE=1,PDAYS=PDAYS+$$EN^XUWORKDY(STDT,ENDDT)
 Q PDAYS
 ;
PNDCLR(ROI,ENDDT) ;Function to subtract any days pending clarfication from Turnaround time
 N SHIEN,DONE,REC,STAT,S2,OUTDT,RETDT,FI,DAYSPC,IEN,QQ,QRY
 S (SHIEN,DONE,DAYSPC)=0,FI=19620.91,RETDT=ENDDT
 ; TEST TO SEE IF EVER PENDING CLARIFICATION
 I +$P(^DSIR(19620,ROI,10),U,9) D
 .;CODE FOR ELIMINATING DAYS IN PENDING CLARIFICATION STATUS
 .;THE FORMULA IS AS FOLLOWS:
 .; TOTAL WORKDAYS - PENDING CLARIFICATION DAYS
 .; WHERE WORKDAYS = CLOSED DATE - RECEIVED DATE (EXCLUDING WEEKENDS AND HOLIDAYS)
 .; PENDING CLARIFICATION DAYS = DATE RETURNED - DATE SENT (EXCLUDING WEEKENDS AND HOLIDAYS)
 .; IF THE TOTAL DAYS IS LESS THAN 1 THEN RETURN A 1
 .S IEN=ROI F  Q:DONE  D
 ..S SHIEN=$O(^DSIR(FI,"B",IEN,SHIEN)) I (IEN'=ROI)!('+SHIEN) S DONE=1 Q
 ..S REC=^DSIR(FI,SHIEN,0),STAT=$P(REC,U,8) Q:STAT'=19
 ..S OUTDT=$P(REC,U,3),DONE=1
 ..;Find the next status
 ..S QRY=$NA(^DSIR(FI,"ASTDTDTE",ROI,$P(^DSIR(FI,SHIEN,0),U,3),$P(^DSIR(FI,SHIEN,0),U,5),SHIEN))
 ..S QQ=$Q(@QRY),IEN=$QS(QQ,3)
 ..I IEN=ROI  S RETDT=$QS(QQ,4)
 ..I IEN'=ROI S RETDT=ENDDT
 ..S DAYSPC=$$EN^XUWORKDY(OUTDT,RETDT)
 Q DAYSPC
 ;
FROMEND(REQ,IEN) ;
 N CTR1,CTR2,STH S CTR1=0,CTR2=0,STH=IEN
 F  S STH=$O(^DSIR(19620.91,"B",REQ,STH)) Q:'STH  S CTR1=CTR1+1
 Q CTR1
