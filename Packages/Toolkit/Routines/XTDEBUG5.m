XTDEBUG5 ;JLI/OAK_OIFO- ;06/07/08  17:30
 ;;7.3;TOOLKIT;**107**;Apr 25, 1995;Build 10
 ;;Per VHA Directive 2004-038, this routine should not be modified
 D EN^XTMUNIT("ZZUTXTD1")
 Q
 ;
SETWATCH(XTDEBRES,XTDEBWAT) ;
 N XTDEBLOC,XTDEBCND
 S XTDEBLOC=$$GETGLOBS(),XTDEBLOC=$NA(@XTDEBLOC@("WATCH"))
 S XTDEBCND=$P($G(XTDEBWAT),";",2,999),XTDEBWAT=$P($G(XTDEBWAT),";")
 I XTDEBWAT'="" S @XTDEBLOC@(XTDEBWAT)="" I XTDEBCND'="" S @XTDEBLOC@(XTDEBWAT,"COND")=XTDEBCND
 D RETVALS(.XTDEBRES,XTDEBLOC)
 Q
 ;
RETVALS(XTDEBRES,XTDEBLOC) ;
 N XTDEBTMP,XTDEBCNT,XTDEBVAR
 S XTDEBTMP=$NA(^TMP($J,"TEMP")) K @XTDEBTMP
 S XTDEBRES=XTDEBTMP,XTDEBCNT=0
 S XTDEBVAR="" F  S XTDEBVAR=$O(@XTDEBLOC@(XTDEBVAR)) Q:XTDEBVAR=""  D
 . S XTDEBCNT=XTDEBCNT+1
 . S @XTDEBTMP@(XTDEBCNT)=XTDEBVAR_";"_$G(@XTDEBLOC@(XTDEBVAR,"COND"))
 . Q
 Q
 ;
CLRWATCH(XTDEBRES,XTDEBWAT) ;
 N XTDEBLOC,XTDEBTMP,XTDEBCNT,XTDEBVAR
 S XTDEBLOC=$$GETGLOBS() S XTDEBLOC=$NA(@XTDEBLOC@("WATCH"))
 K @XTDEBLOC@($P(XTDEBWAT,";"))
 D RETVALS(.XTDEBRES,XTDEBLOC)
 Q
 ;
CHKWATCH() ;
 N XTDEBRES
 S XTDEBRES=$$RESULTS^XTDEBUG(),XTDEBRES=$NA(@XTDEBRES@("WATCH"))
 D DEBUG^XTMLOG("IN CHKWATCH $D(@XTDEBRES)>0 = "_($D(@XTDEBRES)>0))
 Q $D(@XTDEBRES)>0
 ;
GETWATCH() ;
 N XTDEBGLO,XTDEBRES,XTDEBGLO,XTDEBX1,XTDEBX0,XTDEBVAR,XTDEBCNT
 N XTDEBCNG,XTDEBLIN,XTDEBYES,XTDEBCND
 S XTDEBGLO=$$GETGLOBS(),XTDEBCNG=$$CHANGGLO^XTDEBUG(),XTDEBRES=$$RESULTS^XTDEBUG(),XTDEBRES=$NA(@XTDEBRES@("WATCH")) K @XTDEBRES
 ; CHKCHANG already called as a part of VALUES if WATCH global set
 D DEBUG^XTMLOG("IN GETWATCH")
 N XTDEBCNT S XTDEBCNT=0
 I $D(@XTDEBGLO@("WATCH")) D
 . D DEBUG^XTMLOG("GETWATCH1")
 . N XTDEBVAR S XTDEBVAR=""
 . F  S XTDEBVAR=$O(@XTDEBGLO@("WATCH",XTDEBVAR)) Q:XTDEBVAR=""  D
 . . S XTDEBCND="" I $D(@XTDEBGLO@("WATCH",XTDEBVAR,"COND")) S XTDEBCND=^("COND")
 . . I XTDEBVAR["*" D
 . . . N VARA,VARB S (VARA,VARB)=$E(XTDEBVAR,1,$L(XTDEBVAR)-1)
 . . . D DEBUG^XTMLOG("GETWATCH2","XTDEBVAR")
 . . . S VARA=$S($L(VARA)>1:$E(VARA,1,$L(VARA)-1),1:"")_$CHAR($ASCII($E(VARA,$L(VARA)))-1)_"zzzzzzzzz"
 . . . F  S VARA=$O(@XTDEBCNG@(VARA)) Q:VARA'[VARB  D
 . . . . S XTDEBX0=$S($D(@XTDEBCNG@(VARA,0)):^(0),1:"<UNDEFINED>")
 . . . . S XTDEBX1=$S($D(@XTDEBCNG@(VARA,1)):^(1),1:"<UNDEFINED>")
 . . . . I XTDEBCND'="" S XTDEBLIN="S XTDEBYES=0 I "_XTDEBCND_" S XTDEBYES=1" X XTDEBLIN I 'XTDEBYES Q
 . . . . S XTDEBCNT=XTDEBCNT+1,@XTDEBRES@(XTDEBCNT)=VARA_" = "_XTDEBX0_"^"_XTDEBX1
 . . . . S @XTDEBRES@(XTDEBCNT,0)=""
 . . . . Q
 . . . Q
 . . I XTDEBVAR'["*" D
 . . . I $D(@XTDEBCNG@(XTDEBVAR,0))!$D(@XTDEBCNG@(XTDEBVAR,1)) D
 . . . . D DEBUG^XTMLOG("GETWATCH3","XTDEBVAR")
 . . . . S XTDEBX0=$S($D(@XTDEBCNG@(XTDEBVAR,0)):^(0),1:"<UNDEFINED>")
 . . . . S XTDEBX1=$S($D(@XTDEBCNG@(XTDEBVAR,1)):^(1),1:"<UNDEFINED>")
 . . . . I XTDEBCND'="" S XTDEBLIN="S XTDEBYES=0 I "_XTDEBCND_" S XTDEBYES=1" X XTDEBLIN I 'XTDEBYES Q
 . . . . S XTDEBCNT=XTDEBCNT+1,@XTDEBRES@(XTDEBCNT)=XTDEBVAR_" = "_XTDEBX0_"^"_XTDEBX1
 . . . . S @XTDEBRES@(XTDEBCNT,0)=""
 . . . . Q
 . . . N VARA,VARB S (VARA,VARB)=XTDEBVAR_"("
 . . . F  S VARA=$O(@XTDEBCNG@(VARA)) Q:VARA'[VARB  D
 . . . . D DEBUG^XTMLOG("GETWATCH4","VARA")
 . . . . S XTDEBX0=$S($D(@XTDEBCNG@(VARA,0)):^(0),1:"<UNDEFINED>")
 . . . . S XTDEBX1=$S($D(@XTDEBCNG@(VARA,1)):^(1),1:"<UNDEFINED>")
 . . . . I XTDEBCND'="" S XTDEBLIN="S XTDEBYES=0 I "_XTDEBCND_" S XTDEBYES=1" X XTDEBLIN I 'XTDEBYES Q
 . . . . S XTDEBCNT=XTDEBCNT+1,@XTDEBRES@(XTDEBCNT)=VARA_" = "_XTDEBX0_"^"_XTDEBX1
 . . . . S @XTDEBRES@(XTDEBCNT,0)=""
 . . . . Q
 . . . Q
 . . Q
 . Q
 I XTDEBCNT>0 S @XTDEBRES="SECTION=WATCH",@XTDEBRES@(0)="WATCH DATA" D DEBUG^XTMLOG("GETWATCH FINISHED")
 D DEBUG^XTMLOG("GETWATCH RESULT $D(@XTDEBRES)>0 = "_($D(@XTDEBRES)>0))
 Q $D(@XTDEBRES)>0
 ;
GETGLOBS() ;
 Q $NA(^TMP("XTDEBUG-S",$J))
 ;
BREAKFRM(XTDEBINP) ; takes data in form TAG+N^ROUTINE and returns it as +LIN^ROUTINE, where LIN is from start of routine
 N XTDEBPAR,LINNUM,VALUE
 D TAGPARTS^XTDEBUG(.XTDEBPAR,XTDEBINP)
 S LINNUM=$$LINENUM^XTDEBUG(XTDEBPAR("ROUTINE"),XTDEBPAR("LINE"))
 S VALUE="+"_LINNUM_"^"_XTDEBPAR("ROUTINE")
 Q VALUE
 ;
SETBREAK(XTDEBRES,XTDEBBRK) ; Usage D SETBREAK(.RESULTS,BRKVALUE)
 N XTDEBLO1,XTDEBLO2,XTDEBCND
 S XTDEBCND=$P($G(XTDEBBRK),";",2,999),XTDEBBRK=$P($G(XTDEBBRK),";")
 S XTDEBLO1=$$GETGLOBS(),XTDEBLO1=$NA(@XTDEBLO1@("BREAK"))
 S XTDEBLO2=$$GETGLOBS(),XTDEBLO2=$NA(@XTDEBLO2@("BREAK-INPUT"))
 S @XTDEBLO1@($$BREAKFRM(XTDEBBRK))="" I XTDEBCND'="" S @XTDEBLO1@($$BREAKFRM(XTDEBBRK),"COND")=XTDEBCND
 S @XTDEBLO2@(XTDEBBRK)="" I XTDEBCND'="" S @XTDEBLO2(XTDEBBRK,"COND")=XTDEBCND
 D RETVALS(.XTDEBRES,XTDEBLO2)
 Q
 ;
CLRBREAK(XTDEBRES,XTDEBBRK) ; Usage D CLRBREAK(.RESULTS,BRKVALUE)
 N XTDEBLO1,XTDEBLO2
 S XTDEBLO1=$$GETGLOBS(),XTDEBLO1=$NA(@XTDEBLO1@("BREAK"))
 S XTDEBLO2=$$GETGLOBS(),XTDEBLO2=$NA(@XTDEBLO2@("BREAK-INPUT"))
 K @XTDEBLO1@($$BREAKFRM(XTDEBBRK))
 K @XTDEBLO2@(XTDEBBRK)
 D RETVALS(.XTDEBRES,XTDEBLO2)
 Q
 ;
CHKBREAK(XTDEBROU,XTDEBLIN) ; Usage VALUE=$$CHKBREAK(ROUNAME,LINEID) returns 1 if a breakpoint is set on the line
 N XTDEBGLO,LINNUM,VALUE,XTDEBCND,XTDEBLOC,COUNT,XTDEBYES
 S XTDEBGLO=$$GETGLOBS(),XTDEBGLO=$NA(@XTDEBGLO@("BREAK"))
 S XTDEBLOC="+"_XTDEBLIN_"^"_XTDEBROU
 S VALUE=0 I $D(@XTDEBGLO@(XTDEBLOC)) D
 . S VALUE=1
 . ; count each pass through location - have to clear on new entry
 . S COUNT=$G(@XTDEBGLO@(XTDEBLOC,"COUNT"))+1
 . S @XTDEBGLO@(XTDEBLOC,"COUNT")=COUNT
 . S XTDEBCND=$G(@XTDEBGLO@("+"_XTDEBLIN_"^"_XTDEBROU,"COND"))
 . I XTDEBCND'="" S XTDEBLIN="S XTDEBYES=0 I "_XTDEBCND_" S XTDEBYES=1" X XTDEBLIN S VALUE=XTDEBYES
 . Q
 Q VALUE
