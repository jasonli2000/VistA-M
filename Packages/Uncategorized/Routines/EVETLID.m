EVETLID ;DALOI/DS - Communications procesor for eVault requests ; 2/9/04 10:11am
 ;;1.0;HEALTH EVET;**1,2**;Nov 05, 2002
 ;;get site specific variables from file - 9/12/02 - lel
 ;;executes download code only - 5/2/02 - lel
 ;;moved open command to OPENPORT to force wait until open - lel
 ;;Split routine to EVETLID1 - 10/25/02 gpm
 ;debugging code only
 N EVDEBUG,EVTLOG,X
 S EVDEBUG=0
 S EVTLOG=0
 I EVDEBUG=1 D
 . K ^TMP("EVET_DEBUG_PR")
 . K ^TMP("EVET_DBUG_TR")
 . Q
 ;
 S X="ERR^EVETLID",@^%ZOSF("TRAP")
 N EVCURT,EVCURTC,EVFAIL,EVSD,EVTXCNT,EVSTART,EVSTARTD,EVREQCNT,EVLBUF
 N EVETACT,EVOK,EVEXTM,EVPROCST,EVTSITE,EVTSITEN,EVVER,EVPATCH,EVNOENC
 N EVTREQ,EVTMP2,EVSITEN,EVRUN,EVSBUF,EVPORT,EVNDX2,EVMAX,EVIPADR,EVETSNAM,EVETERR,EVDFN,EVEXT,EVREQ,EVRTN,EVTIME
 S EVTXCNT=0,EVFAIL=0,EVREQCNT=0,EVLBUF=0
 S IOF="#"
 D ENS^%ZISS,^%ZISC
 D NOW^%DTC S DT=X,U="^"
 K ^TMP("EVET_XML_PARSE",$J)
 S EVPROCST=$$NOW^XLFDT
 S EVTIME=$P($$NOW^XLFDT,".",2) ; Set time to run
 S EVNOENC=0 ; encrypt flag
 S EVSBUF="",EVMAX=250000 ; Maximum message size
 S EVRUN=$P($$NOW^XLFDT,".",2)
 ; get version and patch values
 D VER^EVETU1(.EVVER,.EVPATCH)
 ; get site specific values
 S (EVIPADR,EVPORT,EVTSITE,EVTSITEN)=""
 D SITEPRMS^EVETU1(.EVIPADR,.EVPORT,.EVTSITE,.EVTSITEN)
 ;S EVPORT=5700
 ;S EVIPADR="10.2.29.60"
 S EVETSNAM=$P($$SITE^VASITE,U,2)
 S EVSITEN=$P($$SITE^VASITE,U,1)
 I EVTSITE="Y" S EVSITEN=EVTSITEN Q:EVSITEN=""
 D START
 D RECEVENT
 K ^TMP("EVET_LISTENER_REQESTS",$J)
 K ^TMP("EVET_EVLBUF",$J)
 ;I EVDEBUG'=1 K ^TMP("EVET_XML_PARSE",$J)
EVQUIT Q
 ;
SUM ;add summary activity entry to 2276.1
 I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_"*ENTERING SUM, EVTREQ="_EVTREQ
 N FDA,EVNDX,I,X
 Q:EVTREQ=""
 S EVNDX=$P(^EVET(2276.1,0),"^",3)+1
 S FDA(1,2276.1,"+1,",.01)=EVNDX
 S FDA(1,2276.1,"+1,",.02)=EVETACT(EVTREQ)
 S FDA(1,2276.1,"+1,",.03)=EVSTARTD
 S FDA(1,2276.1,"+1,",.04)=EVTXCNT
 S X=$P($H,",",2)-EVSTART S:X=0 X=1
 S FDA(1,2276.1,"+1,",.05)=X
 S FDA(1,2276.1,"+1,",.06)=$J
 S FDA(1,2276.1,"+1,",.07)=EVTREQ
 S FDA(1,2276.1,"+1,",.08)=EVEXTM(EVTREQ)
 D UPDATE^DIE("","FDA(1)","")
 ;build list of categories
 ;S EVLIST=EVETACT(EVTREQ,1)
 S EVNDX2="+1,"_EVNDX_","
 ;F I=1:1 D  Q:$P(EVLIST,"^",I)=""
 S I=""
 F  S I=$O(EVETACT(EVTREQ,I)) Q:I=""  D
 . S X=EVETACT(EVTREQ,I)
 . S FDA(2,2276.11,EVNDX2,.01)=$P(X,";",1)
 . S FDA(2,2276.11,EVNDX2,.02)=$P(X,";",2)
 . D UPDATE^DIE("","FDA(2)","")
 Q
 ;
RECEVENT ;record start and stop time in 2276.3 file
 N FDA,EVNDX
 S EVNDX=$P(^EVET(2276.3,0),"^",3)+1
 S FDA(1,2276.3,"+1,",.01)=EVNDX
 S FDA(1,2276.3,"+1,",.02)=$J
 S FDA(1,2276.3,"+1,",.03)=EVPROCST
 S FDA(1,2276.3,"+1,",.04)=$$NOW^XLFDT
 D UPDATE^DIE("","FDA(1)","")
 Q
OPENPORT ;open the port; keep opening until successful.
 N POP,I
 F I=1:1:5 D CALL^%ZISTCP(EVIPADR,EVPORT,30) Q:'POP
 I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_$S(POP:"*OPEN PORT FAILED",1:"*OPEN PORT SUCCESS")
 I POP S EVFAIL=1
OP1 ;OPEN EVPORT:(TCPCHAN,ADDRESS=EVIPADR:FLUSHWAIT):30 I '$T G OP1
 ;U EVPORT
 S IOF="!"
 Q
START ;Starts transmission
 ;debug only code
 N EVEND,EVNON,EVETLDT,X,EVREQUX,EVBLKFLG,EVCNT,EVFROMD,EVL,EVUICN,EVSITE,EVSENT,EVREQI
 S (EVSENT,EVEND,EVCNT,EVNON)=0
 D OPENPORT
 Q:EVFAIL>0  ;failure connecting to server, quit
 ;debug only code
 I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_"*START-PORT OPEN"
 D SENDREQ^EVETLID1
 S (EVLINE,EVSBUF)=""
 K ^TMP("EVETREQ",$J),^TMP("EVETLIS",$J)
 ;D READT^EVETLI2("extract_request","</eVaultRequestResponse_1>",0)
 D GETRESP^EVETLI4(0,255,$C(3))
 D CLOSE^%ZISTCP
 S EVREQ=""
 I '$D(^TMP("EVET_XML_PARSE",$J,0)) Q
 I $D(^TMP("EVET_XML_PARSE",$J,0,"ERROR","result")) D ALERT^EVETU1("REQUEST") K ^TMP("EVET_XML_PARSE",$J,0,"ERROR","result") Q
 F  S EVREQ=$O(^TMP("EVET_XML_PARSE",$J,0,EVREQ)) Q:EVREQ=""  D
 . I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_"*EXTRACTING DATA FOR REQUEST: "_EVREQ
 . I $E(EVREQ,1,2)'?1"-"1N.N Q
 . K EVREQU
 . S EVSTART=$P($H,",",2)
 . S EVREQCNT=EVREQCNT+1  ;count # of requests
 . S EVTXCNT=0  ;initialize count of data bytes sent
 . D PARSE^EVETLID1("XML",EVREQ,0)
 . S EVREQUX=$G(EVREQU(1))
 . S:EVREQUX="" EVREQUX="XXX"
 . D AUDIT^EVETAUD("",EVUICN,$$NOW^XLFDT(),"ER",EVREQUX,EVREQ)
 . S ^TMP("EVET_LISTENER_REQESTS",$J,EVREQ)=EVUICN_"^"_EVSITE
 . S EVDFN=$$GETDFN^MPIF001($P(EVUICN,"V"))
 . I $P(EVDFN,"^",1)="-1" D  Q
 . . D AUDIT^EVETAUD("",EVUICN,$$NOW^XLFDT(),"ER",EVDFN,EVREQ)
 . . I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_"*FOR EVUICN="_EVUICN_" BAD RESPONSE: "_EVDFN
 . . Q
 . S EVETACT(EVREQ)=EVDFN  ;save dfn for request
 . I $D(EVREQU)=0 S EVNON=1
 . ;check to see if DFN is blocked for downloads
 . S EVBLKFLG=0
 . D CHKBLOCK^EVETU1(EVDFN,.EVBLKFLG)
 . ;if blocked, delete categories
 . IF EVBLKFLG=1 K ^TMP("EVET_XML_PARSE",$J,0,EVREQ,"update_requested"),EVREQU S ^TMP("EVETLIS",$J,EVREQ)=1
 . S EVL=""
 . F  S EVL=$O(EVREQU(EVL)) Q:EVL=""  D
 .. ;save list of areas being requested
 .. S EVETACT(EVREQ,EVL)=EVREQU(EVL)
 .. S EVREQI=$P(EVREQU(EVL),";",1)
 .. S EVETLDT=$P(EVREQU(EVL),";",2)
 .. Q:EVREQI=""
 .. I EVREQI="Monster"!(EVREQI="All") D ALL^EVETLID1(EVDFN,EVREQI)
 .. E  D 
 ... S EVEXT=$$FINDEX^EVETLID1(EVREQI)
 ... I EVETLDT'="" S EVFROMD=$$CONVDT^EVETU1(EVETLDT)
 ... I EVDEBUG>0 S EVFROMD="1900-01-01T01:00:00"
 ... I EVFROMD="" S EVFROMD="1900-01-01T01:00:00"
 ... S EVRTN="GET"_EVEXT_"("_EVDFN_","_$$XMLTOFM(EVFROMD)_","_EVREQ_")"
 ... ;debug code only
 ... I EVDEBUG=1 S ^TMP("EVET_DEBUG_PR",$O(^TMP("EVET_DEBUG_PR",""),-1)+1)=$H_"*PROCESS ONE "_EVRTN
 ... ;Now do extract-no extract is no program name
 ... I EVEXT'="" D @(EVRTN)
 ... Q
 .. Q
 . ;save extract time to array for later use
 . S X=$P($H,",",2)-EVSTART S:X=0 X=1
 . S EVEXTM(EVREQ)=X
 . D OPTWO^EVETLID1
 . I 'EVDEBUG K ^TMP("EVETLIS",$J,EVREQ)
 . Q
 ;Q:EVNON=1
 D CLOSE^%ZISTCP
 Q
 ;
XMLTOFM(EVDATE) ;
 N EVY,EVTT,EVDAT,EVDA
 S EVY=$P(EVDATE,"T",1)
 S EVTT=$P(EVY,"-",2,3)
 S EVDA=EVTT_"/"_$P(EVDATE,"-",1)_"@"_$P(EVDATE,"T",2)
 S EVDAT=$$GETDT(EVDA)
 Q EVDAT
GETDT(EVDATE) ;GMV CONVERT DATE
 ;INPUT VARIABLE:
 ;GMRDATE - DATE/TIME FROM EDIT.TEXT ENTERED BY USER
 ;OUTPUT VARIABLE:
 ;RESULT - CONTAINS INTERNAL AND EXTERNAL DATE/TIME
 N EVDAT D DT^DILF("ETS",EVDATE,.EVDAT)
 I $G(EVDAT)'>0 Q ""
 Q EVDAT
 Q
SENDL(EVCOPY) ;
 I $G(EVLINE)=""!(EVCOPY=1) S EVLINE=EVSBUF
 S EVSD=EVSD+$L(EVLINE)
 ;debug code only
 I EVDEBUG=1 S ^TMP("EVET_DEBUG_TR",$O(^TMP("EVET_DEBUG_TR",""),-1)+1)=EVLINE
 S EVLBUF=EVLBUF+1,^TMP("EVET_EVLBUF",$J,EVLBUF)=EVLINE ;save code block
 I EVNOENC=1 D
 . W EVLINE,@IOF
 . S EVTXCNT=EVTXCNT+$L(EVLINE)
 . Q
 E  D
 . W $$ENCRYP^EVETENC(EVLINE),@IOF
 . S EVTXCNT=EVTXCNT+$L(EVLINE)
 . Q
 I EVCOPY=1 D
 . S (EVLINE,EVSBUF)=""
 . Q
 Q
RESENDL ;resend the last message sent
 N EVLINE,I
 I EVDEBUG=1 S ^TMP("EVET_DEBUG_TR",$O(^TMP("EVET_DEBUG_TR",""),-1)+1)=$H_"*RESENDING DATA, ERROR RECEIVED"
 F I=1:1:EVLBUF D
 . S EVLINE=^TMP("EVET_EVLBUF",$J,EVLBUF)
 . I EVNOENC=1 W EVLINE,@IOF
 . I EVNOENC'=1 W $$ENCRYP^EVETENC(EVLINE),@IOF
 Q
 ;
CHA(STR) ;Replace XML special characters and strip control characters
 N I,XSTR,CSTR,BSTR,QT
 S XSTR="",CSTR="",$P(BSTR," ",31)="",QT=$C(34)
 F I=0:1:8,11,12,14:1:31,127 S CSTR=CSTR_$C(I)
 S STR=$TR(STR,CSTR,BSTR)
 I STR["&" D
 .F I=1:1:$L(STR,"&") S $P(XSTR,"&amp;",I)=$P(STR,"&",I)
 .S STR=XSTR,XSTR=""
 I STR["<" D
 .F I=1:1:$L(STR,"<") S $P(XSTR,"&lt;",I)=$P(STR,"<",I)
 .S STR=XSTR,XSTR=""
 I STR[">" D
 .F I=1:1:$L(STR,">") S $P(XSTR,"&gt;",I)=$P(STR,">",I)
 .S STR=XSTR,XSTR=""
 I STR["'" D
 .F I=1:1:$L(STR,"'") S $P(XSTR,"&apos;",I)=$P(STR,"'",I)
 .S STR=XSTR,XSTR=""
 I STR[QT D
 .F I=1:1:$L(STR,QT) S $P(XSTR,"&quot;",I)=$P(STR,QT,I)
 .S STR=XSTR,XSTR=""
 Q STR
 ;
ERR ;Error trap
 D ^%ZTER
 D ALERT^EVETU1("DOWNLOAD")
 D CLOSE^%ZISTCP
 Q
